generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  role          UserRole  @default(CUSTOMER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  bonusCodes    BonusCode[]
  orders        Order[]
  
  @@map("users")
}

model Shop {
  id            String    @id @default(cuid())
  name          String
  description   String?
  address       String
  city          String
  postalCode    String
  phone         String?
  email         String?
  website       String?
  category      ShopCategory
  isActive      Boolean   @default(true)
  latitude      Float?
  longitude     Float?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  bonusCodes    BonusCode[]
  orders        Order[]
  
  @@map("shops")
}

model BonusCode {
  id                   String    @id @default(cuid())
  code                 String    @unique
  amount               Float
  isUsed               Boolean   @default(false)
  expiresAt            DateTime
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  usedAt               DateTime?
  residenceProofPath   String?
  
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  shopId        String?
  shop          Shop?     @relation(fields: [shopId], references: [id])
  orderId       String?   @unique
  order         Order?    @relation(fields: [orderId], references: [id])
  
  @@map("bonus_codes")
}

model Order {
  id            String    @id @default(cuid())
  total         Float
  status        OrderStatus @default(PENDING)
  description   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  shopId        String
  shop          Shop      @relation(fields: [shopId], references: [id])
  bonusCode     BonusCode?
  
  @@map("orders")
}

enum UserRole {
  CUSTOMER
  ADMIN
  SUPER_ADMIN
}

enum ShopCategory {
  ELECTRONICS
  CLOTHING
  JEWELRY
  WATCHES
  APPLIANCES
  FURNITURE
  SHOES
  BAGS
  BIKES
  CARS
  OTHER
}

enum OrderStatus {
  PENDING
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}